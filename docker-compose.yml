version: '3.6'
services:
  lunieapi:
    image: lunieapi:latest
    container_name: lunieapi
    restart: on-failure
    volumes:
    - /logs:/var/www/server/logs
    networks:
       - general
    logging:
      driver: loki
      options:
        loki-url: "http://admin:${LOKI_PASSWORD}@monitoring.lunie.io:3100/loki/api/v1/push"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 3.5G
      restart_policy:
        condition: on-failure
    environment:
      - HASURA_URL=$HASURA_URL
      - HASURA_ADMIN_KEY=$HASURA_ADMIN_KEY
      - SENTRY_DSN=$SENTRY_DSN
      - NODE_ENV=staging
      - ENABLE_CACHE=true
      - REDIS_URL=http://redis:6379
  node-exporter:
    image: prom/node-exporter
    container_name: node_exporter
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - ./root/textfile_collector:/var/www
    - /:/rootfs:ro
    command:
    - --path.procfs=/host/proc
    - --path.sysfs=/host/sys
    - --collector.textfile.directory=/var/www
    - --collector.filesystem.ignored-mount-points
    - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    restart: always
    networks:
       - general
    deploy:
      mode: global
  caddy:
    image: abiosoft/caddy:1.0.3-no-stats
    depends_on:
    - "lunieapi"
    restart: on-failure
    container_name: caddy
    networks:
       - general
    deploy:
      replicas: 1
    ports:
    - "80:80"
    - "443:443"
    - "9100:9100"
    volumes:
    - ./Caddyfile:/etc/Caddyfile
    - ./caddy_certs:/root/.caddy
  redis:
    image: redis
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    networks:
      - general
    volumes:
      - ./redis_data:/data
volumes:
  caddy_certs:
  redis_data:
networks:
  general:

